Search.setIndex({"docnames": ["h3", "h3.dataloading", "h3.dataprocessing", "h3.models", "h3.plotting", "h3.utils", "index"], "filenames": ["h3.rst", "h3.dataloading.rst", "h3.dataprocessing.rst", "h3.models.rst", "h3.plotting.rst", "h3.utils.rst", "index.rst"], "titles": ["h3 package", "h3.dataloading package", "h3.dataprocessing package", "h3.models package", "h3.plotting package", "h3.utils package", "Welcome to Hurricane Harm Herald - H3\u2019s documentation!"], "terms": {"dataload": [0, 5, 6], "hurricanedataset": 0, "cmorph": [0, 5], "cmorph_filename_rang": [0, 1], "load_cmorph": [0, 1], "main": [0, 1, 2, 3, 4, 5], "flood_risk": 0, "general_df_util": 0, "calc_distance_between_df_col": [0, 1], "calc_means_df_col": [0, 1], "calculate_first_last_dates_from_df": [0, 1], "concat_df_col": [0, 1], "exclude_df_rows_by_rang": [0, 1], "exclude_df_rows_symmetrically_around_valu": [0, 1], "find_index_closest_point_in_col": [0, 1], "generate_lat_lon_from_points_col": [0, 1], "limit_df_spatial_rang": [0, 1], "points_from_df_lat_lon_col": [0, 1], "standardise_df": [0, 1], "station_avail": [0, 1], "noaa_six_hourly_process": 0, "convert_lat_lon": [0, 1], "preprocess_noaa_textfil": [0, 1], "reformat_noaa_df": [0, 1], "return_most_recent_events_by_nam": [0, 1], "windspeed_to_strength_categori": [0, 1], "strom_surg": 0, "check_storm": [0, 1], "get_location_box": [0, 1], "is_in_area": [0, 1], "latlon2_storm_surg": [0, 1], "point_loc": [0, 1], "terrain_ef": 0, "calculate_esa": [0, 1], "check_coastlines_fil": [0, 1], "check_dem_fil": [0, 1], "get_building_group": [0, 1], "get_buildings_bounding_box": [0, 1], "get_coastlin": [0, 1], "get_coastpoints_rang": [0, 1], "get_dem_url": [0, 1], "get_distance_coast": [0, 1], "get_elev": [0, 1], "get_terrain_ef": [0, 1], "lonlat2xi": [0, 1], "weather": [0, 3, 5], "xbd": [0, 2], "dataprocess": [0, 6], "dataaugment": 0, "crop_imag": 0, "extract_coord": [0, 2], "image_process": [0, 2], "mask_to_bb": [0, 2], "polygon_mask": [0, 2], "crop_images_img": 0, "save_imag": [0, 2], "extract_metadata": 0, "extract_damage_allfiles_ensembl": [0, 2], "extract_damage_allfiles_separ": [0, 2], "extract_point": [0, 2], "extract_polygon": [0, 2], "filter_fil": [0, 2], "load_and_save_df": [0, 2], "overlapping_polygon": [0, 2], "pre_process": 0, "image_load": [0, 2], "model": [0, 2, 6], "balance_process": 0, "check_files_in_list_exist": [0, 3], "data_load": [0, 3], "drop_cols_containing_list": [0, 3], "read_and_merge_pkl": [0, 3], "rename_and_drop_duplicated_col": [0, 3], "experi": 0, "multimod": 0, "classificationlay": [0, 3], "forward": [0, 3], "genericencod": [0, 3], "imageencod": [0, 3], "overallmodel": [0, 3], "configure_optim": [0, 3], "train_dataload": [0, 3], "training_step": [0, 3], "val_dataload": [0, 3], "validation_step": [0, 3], "opti_util": 0, "load_full_ram": [0, 3], "open_img": [0, 3], "pre_train": 0, "load_imag": [0, 3], "load_model": [0, 3], "simple_model": 0, "logistic_reg": [0, 3], "vision_transform": 0, "get_model": [0, 3], "get_preprocess": [0, 3], "plot": [0, 6], "terrain_plot": 0, "building_plot": [0, 4], "plot_buildings_coast": [0, 4], "plot_coastlin": [0, 4], "plot_dem": [0, 4], "plot_map_loc": [0, 4], "util": [0, 3, 6], "directori": [0, 2, 3], "get_checkpoint_dir": [0, 5], "get_cmorph_dir": [0, 5], "get_coastline_dir": [0, 5], "get_data_dir": [0, 5], "get_dataloading_dir": [0, 5], "get_datasets_dir": [0, 5], "get_dem_dir": [0, 5], "get_download_dir": [0, 5], "get_ecmwf_data_dir": [0, 5], "get_flood_dir": [0, 5], "get_h3_data_files_dir": [0, 5], "get_isd_data_dir": [0, 5], "get_metadata_pickle_dir": [0, 5], "get_noaa_data_dir": [0, 5], "get_pickle_dir": [0, 5], "get_processed_data_dir": [0, 5], "get_storm_dir": [0, 5], "get_terrain_dir": [0, 5], "get_weather_data_dir": [0, 5], "get_xbd_dir": [0, 5], "get_xbd_disaster_dir": [0, 5], "get_xbd_hlabel_dir": [0, 5], "get_xbd_hurricane_dir": [0, 5], "download": [0, 1], "url_download": [0, 5], "file_op": 0, "check_all_download": [0, 5], "get_sha1": [0, 5], "guarantee_exist": [0, 5], "unpack_fil": [0, 5], "simple_funct": 0, "get_h3_dir": [0, 6], "sourc": [0, 1, 2, 3, 4, 5], "class": [1, 2, 3], "arg": [1, 3], "ani": [1, 3], "kwarg": [1, 3], "base": [1, 2, 3], "dataset": [1, 2, 3, 5], "start_dat": 1, "date": [1, 2], "stop_dat": 1, "list": [1, 2, 3, 4], "hurricane_d": 1, "day_rang": 1, "int": [1, 2, 3, 4, 5], "df": [1, 3], "pd": 1, "datafram": [1, 2, 3], "cols_compar": 1, "tupl": 1, "str": [1, 2, 3, 5], "new_col_nam": 1, "distanc": 1, "calcul": 1, "geodes": 1, "between": [1, 2], "set": [1, 3], "lat": [1, 2, 4], "lon": [1, 4], "valu": [1, 2, 3], "see": [1, 2, 5], "http": [1, 5], "geopi": 1, "readthedoc": 1, "io": 1, "en": 1, "stabl": 1, "more": 1, "info": 1, "paramet": [1, 2, 3, 4, 5], "contain": [1, 2, 3], "two": [1, 2], "pair": 1, "column": [1, 2, 3], "input": [1, 2, 3], "option": [1, 2, 5], "The": [1, 2, 3, 5], "default": [1, 2, 5], "i": [1, 2, 3, 5], "return": [1, 2, 3], "copi": [1, 3], "an": [1, 5], "extra": 1, "type": [1, 2, 3], "col_nam": 1, "mean": [1, 3], "prescrib": 1, "float": [1, 3], "each": [1, 3], "time_buff": 1, "0": [1, 3], "h": 1, "date_col_nam": 1, "none": [1, 4, 5], "timestamp": 1, "first": [1, 3], "last": 1, "from": [1, 2, 3], "time": [1, 3], "buffer": [1, 5], "befor": [1, 3], "after": [1, 5], "should": [1, 2], "least": [1, 3], "one": 1, "datetim": 1, "If": [1, 2, 3, 5], "multipl": [1, 5], "us": [1, 2, 3, 5], "specifi": 1, "Will": 1, "occur": 1, "remov": [1, 3], "add": [1, 2], "A": [1, 2, 3], "string": [1, 3], "unit": 1, "necessari": 1, "e": [1, 2, 3], "g": [1, 3], "hour": 1, "either": [1, 3], "panda": [1, 2, 3, 4], "pydata": 1, "org": 1, "doc": 1, "refer": [1, 2], "api": 1, "timedelta": 1, "html": 1, "name": [1, 2, 3], "object": [1, 2], "process": [1, 2], "detail": 1, "start": 1, "end": 1, "n": [1, 3], "b": [1, 3], "current": 1, "discard": 1, "timezon": 1, "inform": [1, 2], "concatted_col_nam": 1, "cols_to_concat": 1, "delimit": 1, "concaten": [1, 2], "new": 1, "link": 1, "capit": 1, "desir": [1, 2], "order": 1, "charact": 1, "insert": 1, "empti": 1, "addit": 1, "concat": 1, "value_bound": 1, "compos": 1, "onli": [1, 3], "row": [1, 2, 3], "within": 1, "rang": 1, "amount": 1, "handi": 1, "restrict": 1, "larg": [1, 2], "must": 1, "bound": [1, 2], "limit": 1, "col1": 1, "coln": 1, "relev": 1, "start_val1": 1, "end_val1": 1, "start_valn": 1, "end_valn": 1, "minimum": 1, "maximum": 1, "allow": 1, "side": [1, 2], "station": 1, "observ": 1, "exist": [1, 2, 3], "some": 1, "event": [1, 2], "interest": [1, 3], "sub": 1, "origin": 1, "poi": 1, "buffer_v": 1, "which": [1, 2, 3], "exclud": 1, "outsid": 1, "1": [1, 3, 4, 5], "can": [1, 2, 3], "period": 1, "data": [1, 2, 3, 5], "potenti": 1, "point": [1, 2, 4], "about": [1, 2], "exclus": 1, "centr": 1, "One": 1, "In": 1, "case": 1, "provid": 1, "shape": [1, 2], "points_df": 1, "points_df_geom_col": 1, "which_closest": 1, "find": 1, "index": [1, 3, 6], "closest": 1, "For": 1, "other": [1, 3], "nth": 1, "relat": 1, "points_col": 1, "gener": 1, "": 1, "ad": 1, "being": 1, "convert": [1, 2], "chosen": 1, "dtype": 1, "sinc": 1, "might": 1, "want": 1, "centre_coord": 1, "min_numb": 1, "distance_buff": 1, "verbos": 1, "bool": [1, 2, 4, 5], "fals": [1, 2, 3, 5], "number": [1, 2, 3], "geograph": 1, "don": [1, 3], "t": [1, 3], "show": 1, "messag": 1, "re": 1, "expans": 1, "choos": [1, 2], "whether": [1, 2], "wa": 1, "expand": 1, "spatial": [1, 2], "point_col_nam": 1, "geometri": [1, 2], "todo": 1, "docstr": 1, "date_col": 1, "new_point_col_nam": 1, "appli": [1, 3], "variou": 1, "format": [1, 2, 5], "function": [1, 2, 3, 4], "make": [1, 3], "behav": [1, 3], "you": 1, "d": 1, "expect": 1, "reformat": 1, "df_station": 1, "df_noaa_weather_ev": 1, "avail": 1, "true": [1, 2, 3, 4, 5], "filter": [1, 2], "present": 1, "coord": 1, "long": [1, 2], "00n": 1, "preprocess": 1, "read": [1, 2, 3], "assign": 1, "delet": [1, 5], "header": [1, 3], "have": [1, 3], "been": 1, "standard": 1, "noaa": [1, 3, 5], "txt": 1, "file": [1, 2, 3, 5], "tidi": 1, "up": [1, 2], "event_nam": 1, "most": [1, 2], "recent": 1, "includ": [1, 2], "judg": 1, "thi": [1, 2, 3, 5], "flexibl": 1, "select": 1, "val": 1, "intens": 1, "sustain": 1, "wind": 1, "speed": [1, 3], "numer": 1, "compar": 1, "storm": [1, 5], "categoris": 1, "clean_after_unpack": 1, "reload": 1, "helper": 1, "check": [1, 2], "ar": [1, 2, 3, 5], "storm_dir": 1, "It": [1, 2, 3, 5], "quit": [1, 5], "naiv": 1, "what": [1, 3], "unpack": [1, 5], "them": [1, 2, 3], "zip": 1, "forc": 1, "locat": [1, 2], "liter": [1, 2, 4], "u": 1, "haiti": 1, "get": 1, "box": [1, 2], "coordin": [1, 2, 4], "follow": 1, "lon_min": 1, "lon_max": 1, "lat_min": 1, "lat_max": 1, "sequenc": 1, "area_box": 1, "area": 1, "tuple_lik": 1, "need": [1, 2], "usual": 1, "given": [1, 2, 4], "iter": [1, 5], "categori": 1, "its": 1, "latitud": [1, 2], "longitud": [1, 2], "like": [1, 3], "differ": [1, 3], "exampl": 1, "18": 1, "72": 1, "building_group": [1, 4], "dataframegroupbi": [1, 4], "coast_point": [1, 4], "numpi": [1, 2, 3], "ndarrai": [1, 2, 3], "dem_url": [1, 4], "dis_threshold": [1, 4], "2": [1, 4], "core": [1, 4], "groupbi": [1, 4], "load": [1, 2, 3], "build": [1, 2], "damag": [1, 2, 3], "pickl": [1, 2, 3, 5], "group": 1, "deg": 1, "latlon": 1, "buildings_df": 1, "min": 1, "max": 1, "label": [1, 2, 5], "degre": 1, "east": 1, "north": 1, "west": 1, "south": 1, "coastlin": [1, 4, 5], "shp": 1, "bounding_box": 1, "subset": 1, "get_building_bounding_box": 1, "arrai": [1, 2], "coast": [1, 4], "pad": 1, "distant": 1, "give": [1, 2], "dem": [1, 4], "land": 1, "distribut": 1, "activ": [1, 3], "archiv": [1, 5], "center": [1, 2], "lp": 1, "daac": 1, "e4ftl01": 1, "cr": [1, 2], "usg": 1, "gov": 1, "astt": 1, "astgtm": 1, "003": 1, "2000": 1, "03": 1, "01": 1, "all": [1, 2, 3], "url": [1, 5], "note": 1, "manual": 1, "To": 1, "automat": 1, "account": 1, "creat": [1, 2], "pleas": 1, "go": 1, "ur": 1, "earthdata": 1, "nasa": 1, "user": 1, "np": 1, "nearest_coast_point": 1, "correspond": [1, 2], "dist": 1, "nearest": 1, "metr": 1, "sklearn": 1, "metric": 1, "pairwis": 1, "haversine_dist": 1, "comput": 1, "haversin": 1, "sampl": [1, 3], "neighbor": 1, "balltre": 1, "neighbour": 1, "lookup": 1, "generalis": 1, "assum": 1, "radian": 1, "equat": 1, "x": [1, 3], "y": [1, 2], "arcsin": 1, "left": 1, "sqrt": 1, "sin": 1, "frac": 1, "x_1": 1, "y_1": 1, "right": 1, "co": 1, "x_2": 1, "y_2": 1, "rasterio": [1, 2], "datasetread": [1, 2], "elev": 1, "raster": 1, "queri": 1, "reader": 1, "1d": 1, "esa_df": 1, "transform": [1, 3], "affin": 1, "img": 2, "polygon_df": 2, "zoom_level": [2, 3], "pixel_num": 2, "im_siz": 2, "output_path": 2, "crop": 2, "imageri": 2, "polygon": 2, "pixel": 2, "size": [2, 3], "zoom": [2, 3], "certain": 2, "level": [2, 3], "whilst": 2, "maintain": 2, "bilinear": 2, "interpol": 2, "imag": [2, 3], "cut": 2, "off": 2, "boundari": 2, "pre": 2, "underlai": 2, "around": 2, "dictat": 2, "how": 2, "crop_siz": 2, "requir": 2, "squar": [2, 3], "path": [2, 3, 5], "save": 2, "red": 2, "flag": 2, "ignor": 2, "li": 2, "edg": 2, "integ": 2, "take": 2, "fill": 2, "mask": 2, "rectangular": 2, "polgyon": 2, "align": 2, "outlin": 2, "image_arrai": 2, "img_metadata": 2, "dict": [2, 3], "dictionari": [2, 3], "metadata": 2, "meta": 2, "param": 2, "img_arrai": 2, "resized_img": 2, "filepaths_dict": 2, "post": 2, "hurrican": [2, 5], "extract": 2, "json": 2, "folder": [2, 5], "organis": 2, "These": 2, "holdout": 2, "tier1": 2, "tier3": 2, "test": 2, "kei": 2, "system": 2, "put": 2, "geodatafram": 2, "summari": 2, "separ": 2, "directory_fil": 2, "out": 2, "json_link": 2, "classes_dict": 2, "event_typ": 2, "xy": 2, "map": [2, 3], "centroid": 2, "filepath": [2, 5], "search_criteria": 2, "assist": 2, "search": [2, 6], "criteria": 2, "support": 2, "glob": 2, "wildcard": 2, "output_dir": 2, "reload_pickl": 2, "hold": [2, 5], "section": 2, "both": 2, "pathnam": 2, "recreat": 2, "thei": 2, "did": 2, "ef": [2, 3], "gdf": 2, "geom": 2, "p": 2, "overlap": 2, "do": [2, 3], "alloc": 2, "seri": 2, "match": 2, "polygons_df": 2, "zoomdir_dict": 2, "geopanda": 2, "polygom": 2, "combin": 2, "file_list": 3, "state": 3, "data_dir": 3, "ecmwf": [3, 5], "terrain": [3, 5], "soil": 3, "merg": 3, "drop": 3, "duplic": 3, "googl": 3, "drive": 3, "local": [3, 5], "seem": 3, "best": 3, "solut": 3, "fair": 3, "realli": 3, "think": 3, "better": 3, "look": 3, "multi": 3, "would": 3, "our": 3, "worri": 3, "randomli": 3, "balanc": 3, "count": 3, "destroi": 3, "pkl_path": 3, "pkl": 3, "renam": 3, "asdf_x": 3, "result": 3, "lightningmodul": 3, "descript": 3, "doe": 3, "here": 3, "training_dataset": 3, "torch": 3, "train": 3, "validation_dataset": 3, "image_embedding_architectur": 3, "determin": 3, "embed": 3, "architectur": 3, "possibl": 3, "resnet18": 3, "vit_l_16": 3, "swin_v2_b": 3, "num_input_channel": 3, "channel": 3, "ef_featur": 3, "precip": 3, "wind_spe": 3, "clai": 3, "sand": 3, "dropout_r": 3, "dropout": 3, "probabl": 3, "image_encoder_lr": 3, "learn": 3, "rate": 3, "encod": 3, "weight": 3, "frozen": 3, "general_lr": 3, "part": 3, "batch_siz": 3, "batch": 3, "dure": 3, "valid": 3, "step": 3, "weight_decai": 3, "adam": 3, "decai": 3, "l2": 3, "penalti": 3, "lr_scheduler_pati": 3, "epoch": 3, "loss": 3, "plateau": 3, "lr": 3, "decreas": 3, "num_image_feature_encoder_featur": 3, "featur": 3, "output": 3, "oper": 3, "produc": 3, "num_output_class": 3, "regress": 3, "class_weight": 3, "floattensor": 3, "tensor": 3, "cross": 3, "entropi": 3, "image_only_model": 3, "boolean": 3, "were": 3, "predict": 3, "loss_function_str": 3, "bceloss": 3, "binari": 3, "classif": 3, "celoss": 3, "multiclass": 3, "mse": 3, "error": 3, "output_activ": 3, "sigmoid": 3, "softmax": 3, "relu": 3, "describ": 3, "attribut": 3, "image_encod": 3, "augment": 3, "z": 3, "image_z_embed": 3, "self": 3, "image_z": 3, "lst_path": 3, "callabl": 3, "x_train": 3, "y_train": 3, "x_test": 3, "y_test": 3, "nn": 3, "dis_to_coast": 4, "platecarre": 4, "project": 4, "dem_tif_path_list": 4, "dem_tif_short_name_list": 4, "terrain_attribut": 4, "slope": 4, "aspect": 4, "checkpoint": 5, "dem_data": 5, "flood": 5, "data_fil": 5, "processed_data": 5, "metadata_pickl": 5, "xbd_data": 5, "disast": 5, "old": 5, "geotiff": 5, "target_dir": 5, "github": 5, "workspac": 5, "task": 5, "total": 5, "parallel": 5, "As": 5, "big": 5, "method": 5, "stackoverflow": 5, "com": 5, "22058673": 5, "9931399": 5, "clean": 5, "file_format": 5, "slow": 5, "extens": 5, "shutil": 5, "unpack_arch": 5, "packag": 6, "subpackag": 6, "submodul": 6, "config": 6, "modul": 6, "constant": 6, "page": 6}, "objects": {"": [[0, 0, 0, "-", "h3"]], "h3": [[0, 0, 0, "-", "config"], [0, 0, 0, "-", "constants"], [1, 0, 0, "-", "dataloading"], [2, 0, 0, "-", "dataprocessing"], [3, 0, 0, "-", "models"], [4, 0, 0, "-", "plotting"], [5, 0, 0, "-", "utils"]], "h3.config": [[0, 1, 1, "", "get_h3_dir"]], "h3.dataloading": [[1, 0, 0, "-", "HurricaneDataset"], [1, 0, 0, "-", "cmorph"], [1, 0, 0, "-", "flood_risk"], [1, 0, 0, "-", "general_df_utils"], [1, 0, 0, "-", "noaa_six_hourly_processing"], [1, 0, 0, "-", "strom_surge"], [1, 0, 0, "-", "terrain_ef"]], "h3.dataloading.HurricaneDataset": [[1, 2, 1, "", "HurricaneDataset"]], "h3.dataloading.cmorph": [[1, 1, 1, "", "cmorph_filename_range"], [1, 1, 1, "", "load_cmorph"], [1, 1, 1, "", "main"]], "h3.dataloading.flood_risk": [[1, 1, 1, "", "main"]], "h3.dataloading.general_df_utils": [[1, 1, 1, "", "calc_distance_between_df_cols"], [1, 1, 1, "", "calc_means_df_cols"], [1, 1, 1, "", "calculate_first_last_dates_from_df"], [1, 1, 1, "", "concat_df_cols"], [1, 1, 1, "", "exclude_df_rows_by_range"], [1, 1, 1, "", "exclude_df_rows_symmetrically_around_value"], [1, 1, 1, "", "find_index_closest_point_in_col"], [1, 1, 1, "", "generate_lat_lon_from_points_cols"], [1, 1, 1, "", "limit_df_spatial_range"], [1, 1, 1, "", "points_from_df_lat_lon_cols"], [1, 1, 1, "", "standardise_df"], [1, 1, 1, "", "station_availability"]], "h3.dataloading.noaa_six_hourly_processing": [[1, 1, 1, "", "convert_lat_lon"], [1, 1, 1, "", "preprocess_noaa_textfile"], [1, 1, 1, "", "reformat_noaa_df"], [1, 1, 1, "", "return_most_recent_events_by_name"], [1, 1, 1, "", "windspeed_to_strength_category"]], "h3.dataloading.strom_surge": [[1, 1, 1, "", "check_storm"], [1, 1, 1, "", "get_location_box"], [1, 1, 1, "", "is_in_area"], [1, 1, 1, "", "latlon2_storm_surge"], [1, 1, 1, "", "main"], [1, 1, 1, "", "point_locations"]], "h3.dataloading.terrain_ef": [[1, 1, 1, "", "calculate_esa"], [1, 1, 1, "", "check_coastlines_file"], [1, 1, 1, "", "check_dem_files"], [1, 1, 1, "", "get_building_group"], [1, 1, 1, "", "get_buildings_bounding_box"], [1, 1, 1, "", "get_coastlines"], [1, 1, 1, "", "get_coastpoints_range"], [1, 1, 1, "", "get_dem_urls"], [1, 1, 1, "", "get_distance_coast"], [1, 1, 1, "", "get_elevation"], [1, 1, 1, "", "get_terrain_ef"], [1, 1, 1, "", "lonlat2xy"], [1, 1, 1, "", "main"]], "h3.dataprocessing": [[2, 0, 0, "-", "crop_images"], [2, 0, 0, "-", "crop_images_img"], [2, 0, 0, "-", "extract_metadata"], [2, 0, 0, "-", "pre_processing"]], "h3.dataprocessing.crop_images": [[2, 1, 1, "", "crop_images"], [2, 1, 1, "", "extract_coords"], [2, 1, 1, "", "image_processing"], [2, 1, 1, "", "main"], [2, 1, 1, "", "mask_to_bb"], [2, 1, 1, "", "polygon_mask"]], "h3.dataprocessing.crop_images_img": [[2, 1, 1, "", "crop_images"], [2, 1, 1, "", "extract_coords"], [2, 1, 1, "", "image_processing"], [2, 1, 1, "", "main"], [2, 1, 1, "", "mask_to_bb"], [2, 1, 1, "", "polygon_mask"], [2, 1, 1, "", "save_image"]], "h3.dataprocessing.extract_metadata": [[2, 1, 1, "", "extract_damage_allfiles_ensemble"], [2, 1, 1, "", "extract_damage_allfiles_separate"], [2, 1, 1, "", "extract_metadata"], [2, 1, 1, "", "extract_point"], [2, 1, 1, "", "extract_polygon"], [2, 1, 1, "", "filter_files"], [2, 1, 1, "", "load_and_save_df"], [2, 1, 1, "", "main"], [2, 1, 1, "", "overlapping_polygons"]], "h3.dataprocessing.pre_processing": [[2, 1, 1, "", "image_loading"], [2, 1, 1, "", "main"]], "h3.models": [[3, 0, 0, "-", "balance_process"], [3, 0, 0, "-", "multimodal"], [3, 0, 0, "-", "opti_utils"], [3, 0, 0, "-", "pre_train"], [3, 0, 0, "-", "simple_models"], [3, 0, 0, "-", "vision_transformer"]], "h3.models.balance_process": [[3, 1, 1, "", "check_files_in_list_exist"], [3, 1, 1, "", "data_loader"], [3, 1, 1, "", "drop_cols_containing_lists"], [3, 1, 1, "", "main"], [3, 1, 1, "", "read_and_merge_pkls"], [3, 1, 1, "", "rename_and_drop_duplicated_cols"]], "h3.models.multimodal": [[3, 2, 1, "", "ClassificationLayer"], [3, 2, 1, "", "GenericEncoder"], [3, 2, 1, "", "ImageEncoder"], [3, 2, 1, "", "OverallModel"]], "h3.models.multimodal.ClassificationLayer": [[3, 3, 1, "", "forward"]], "h3.models.multimodal.GenericEncoder": [[3, 3, 1, "", "forward"]], "h3.models.multimodal.ImageEncoder": [[3, 3, 1, "", "forward"]], "h3.models.multimodal.OverallModel": [[3, 3, 1, "", "configure_optimizers"], [3, 3, 1, "", "forward"], [3, 3, 1, "", "train_dataloader"], [3, 3, 1, "", "training_step"], [3, 3, 1, "", "val_dataloader"], [3, 3, 1, "", "validation_step"]], "h3.models.opti_utils": [[3, 1, 1, "", "load_full_ram"], [3, 1, 1, "", "main"], [3, 1, 1, "", "open_img"]], "h3.models.pre_train": [[3, 1, 1, "", "load_image"], [3, 1, 1, "", "load_model"], [3, 1, 1, "", "main"]], "h3.models.simple_models": [[3, 1, 1, "", "logistic_reg"], [3, 1, 1, "", "main"]], "h3.models.vision_transformer": [[3, 1, 1, "", "get_model"], [3, 1, 1, "", "get_preprocess"]], "h3.plotting": [[4, 0, 0, "-", "terrain_plots"]], "h3.plotting.terrain_plots": [[4, 1, 1, "", "building_plot"], [4, 1, 1, "", "main"], [4, 1, 1, "", "plot_buildings_coast"], [4, 1, 1, "", "plot_coastline"], [4, 1, 1, "", "plot_dem"], [4, 1, 1, "", "plot_map_location"]], "h3.utils": [[5, 0, 0, "-", "directories"], [5, 0, 0, "-", "downloader"], [5, 0, 0, "-", "file_ops"]], "h3.utils.directories": [[5, 1, 1, "", "get_checkpoint_dir"], [5, 1, 1, "", "get_cmorph_dir"], [5, 1, 1, "", "get_coastline_dir"], [5, 1, 1, "", "get_data_dir"], [5, 1, 1, "", "get_dataloading_dir"], [5, 1, 1, "", "get_datasets_dir"], [5, 1, 1, "", "get_dem_dir"], [5, 1, 1, "", "get_download_dir"], [5, 1, 1, "", "get_ecmwf_data_dir"], [5, 1, 1, "", "get_flood_dir"], [5, 1, 1, "", "get_h3_data_files_dir"], [5, 1, 1, "", "get_isd_data_dir"], [5, 1, 1, "", "get_metadata_pickle_dir"], [5, 1, 1, "", "get_noaa_data_dir"], [5, 1, 1, "", "get_pickle_dir"], [5, 1, 1, "", "get_processed_data_dir"], [5, 1, 1, "", "get_storm_dir"], [5, 1, 1, "", "get_terrain_dir"], [5, 1, 1, "", "get_weather_data_dir"], [5, 1, 1, "", "get_xbd_dir"], [5, 1, 1, "", "get_xbd_disaster_dir"], [5, 1, 1, "", "get_xbd_hlabel_dir"], [5, 1, 1, "", "get_xbd_hurricane_dir"]], "h3.utils.downloader": [[5, 1, 1, "", "downloader"], [5, 1, 1, "", "main"], [5, 1, 1, "", "url_download"]], "h3.utils.file_ops": [[5, 1, 1, "", "check_all_downloads"], [5, 1, 1, "", "get_sha1"], [5, 1, 1, "", "guarantee_existence"], [5, 1, 1, "", "main"], [5, 1, 1, "", "unpack_file"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"h3": [0, 1, 2, 3, 4, 5, 6], "packag": [0, 1, 2, 3, 4, 5], "subpackag": 0, "submodul": [0, 1, 2, 3, 4, 5], "config": 0, "modul": [0, 1, 2, 3, 4, 5], "constant": 0, "dataload": 1, "hurricanedataset": 1, "cmorph": 1, "flood_risk": 1, "general_df_util": 1, "noaa_six_hourly_process": 1, "strom_surg": 1, "terrain_ef": 1, "weather": 1, "xbd": 1, "dataprocess": 2, "dataaugment": 2, "crop_imag": 2, "crop_images_img": 2, "extract_metadata": 2, "pre_process": 2, "model": 3, "balance_process": 3, "experi": 3, "multimod": 3, "opti_util": 3, "pre_train": 3, "simple_model": 3, "vision_transform": 3, "plot": 4, "terrain_plot": 4, "util": 5, "directori": 5, "download": 5, "file_op": 5, "simple_funct": 5, "welcom": 6, "hurrican": 6, "harm": 6, "herald": 6, "": 6, "document": 6, "content": 6, "indic": 6, "tabl": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"h3 package": [[0, "module-h3"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"]], "h3.config module": [[0, "module-h3.config"]], "h3.constants module": [[0, "module-h3.constants"]], "h3.dataloading package": [[1, "module-h3.dataloading"]], "h3.dataloading.HurricaneDataset module": [[1, "module-h3.dataloading.HurricaneDataset"]], "h3.dataloading.cmorph module": [[1, "module-h3.dataloading.cmorph"]], "h3.dataloading.flood_risk module": [[1, "module-h3.dataloading.flood_risk"]], "h3.dataloading.general_df_utils module": [[1, "module-h3.dataloading.general_df_utils"]], "h3.dataloading.noaa_six_hourly_processing module": [[1, "module-h3.dataloading.noaa_six_hourly_processing"]], "h3.dataloading.strom_surge module": [[1, "module-h3.dataloading.strom_surge"]], "h3.dataloading.terrain_ef module": [[1, "module-h3.dataloading.terrain_ef"]], "h3.dataloading.weather module": [[1, "h3-dataloading-weather-module"]], "h3.dataloading.xbd module": [[1, "h3-dataloading-xbd-module"]], "h3.dataprocessing package": [[2, "module-h3.dataprocessing"]], "h3.dataprocessing.DataAugmentation module": [[2, "h3-dataprocessing-dataaugmentation-module"]], "h3.dataprocessing.crop_images module": [[2, "module-h3.dataprocessing.crop_images"]], "h3.dataprocessing.crop_images_img module": [[2, "module-h3.dataprocessing.crop_images_img"]], "h3.dataprocessing.extract_metadata module": [[2, "module-h3.dataprocessing.extract_metadata"]], "h3.dataprocessing.pre_processing module": [[2, "module-h3.dataprocessing.pre_processing"]], "h3.models package": [[3, "module-h3.models"]], "h3.models.balance_process module": [[3, "module-h3.models.balance_process"]], "h3.models.experiments module": [[3, "h3-models-experiments-module"]], "h3.models.multimodal module": [[3, "module-h3.models.multimodal"]], "h3.models.opti_utils module": [[3, "module-h3.models.opti_utils"]], "h3.models.pre_train module": [[3, "module-h3.models.pre_train"]], "h3.models.simple_models module": [[3, "module-h3.models.simple_models"]], "h3.models.vision_transformer module": [[3, "module-h3.models.vision_transformer"]], "h3.plotting package": [[4, "module-h3.plotting"]], "h3.plotting.terrain_plots module": [[4, "module-h3.plotting.terrain_plots"]], "h3.utils package": [[5, "module-h3.utils"]], "h3.utils.directories module": [[5, "module-h3.utils.directories"]], "h3.utils.downloader module": [[5, "module-h3.utils.downloader"]], "h3.utils.file_ops module": [[5, "module-h3.utils.file_ops"]], "h3.utils.simple_functions module": [[5, "h3-utils-simple-functions-module"]], "Welcome to Hurricane Harm Herald - H3\u2019s documentation!": [[6, "welcome-to-hurricane-harm-herald-h3-s-documentation"]], "Contents:": [[6, null]], "Indices and tables": [[6, "indices-and-tables"]]}, "indexentries": {"get_h3_dir() (in module h3.config)": [[0, "h3.config.get_h3_dir"]], "h3": [[0, "module-h3"]], "h3.config": [[0, "module-h3.config"]], "h3.constants": [[0, "module-h3.constants"]], "module": [[0, "module-h3"], [0, "module-h3.config"], [0, "module-h3.constants"], [1, "module-h3.dataloading"], [1, "module-h3.dataloading.HurricaneDataset"], [1, "module-h3.dataloading.cmorph"], [1, "module-h3.dataloading.flood_risk"], [1, "module-h3.dataloading.general_df_utils"], [1, "module-h3.dataloading.noaa_six_hourly_processing"], [1, "module-h3.dataloading.strom_surge"], [1, "module-h3.dataloading.terrain_ef"], [2, "module-h3.dataprocessing"], [2, "module-h3.dataprocessing.crop_images"], [2, "module-h3.dataprocessing.crop_images_img"], [2, "module-h3.dataprocessing.extract_metadata"], [2, "module-h3.dataprocessing.pre_processing"], [3, "module-h3.models"], [3, "module-h3.models.balance_process"], [3, "module-h3.models.multimodal"], [3, "module-h3.models.opti_utils"], [3, "module-h3.models.pre_train"], [3, "module-h3.models.simple_models"], [3, "module-h3.models.vision_transformer"], [4, "module-h3.plotting"], [4, "module-h3.plotting.terrain_plots"], [5, "module-h3.utils"], [5, "module-h3.utils.directories"], [5, "module-h3.utils.downloader"], [5, "module-h3.utils.file_ops"]], "hurricanedataset (class in h3.dataloading.hurricanedataset)": [[1, "h3.dataloading.HurricaneDataset.HurricaneDataset"]], "calc_distance_between_df_cols() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.calc_distance_between_df_cols"]], "calc_means_df_cols() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.calc_means_df_cols"]], "calculate_esa() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.calculate_esa"]], "calculate_first_last_dates_from_df() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.calculate_first_last_dates_from_df"]], "check_coastlines_file() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.check_coastlines_file"]], "check_dem_files() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.check_dem_files"]], "check_storm() (in module h3.dataloading.strom_surge)": [[1, "h3.dataloading.strom_surge.check_storm"]], "cmorph_filename_range() (in module h3.dataloading.cmorph)": [[1, "h3.dataloading.cmorph.cmorph_filename_range"]], "concat_df_cols() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.concat_df_cols"]], "convert_lat_lon() (in module h3.dataloading.noaa_six_hourly_processing)": [[1, "h3.dataloading.noaa_six_hourly_processing.convert_lat_lon"]], "exclude_df_rows_by_range() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.exclude_df_rows_by_range"]], "exclude_df_rows_symmetrically_around_value() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.exclude_df_rows_symmetrically_around_value"]], "find_index_closest_point_in_col() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.find_index_closest_point_in_col"]], "generate_lat_lon_from_points_cols() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.generate_lat_lon_from_points_cols"]], "get_building_group() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.get_building_group"]], "get_buildings_bounding_box() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.get_buildings_bounding_box"]], "get_coastlines() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.get_coastlines"]], "get_coastpoints_range() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.get_coastpoints_range"]], "get_dem_urls() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.get_dem_urls"]], "get_distance_coast() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.get_distance_coast"]], "get_elevation() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.get_elevation"]], "get_location_box() (in module h3.dataloading.strom_surge)": [[1, "h3.dataloading.strom_surge.get_location_box"]], "get_terrain_ef() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.get_terrain_ef"]], "h3.dataloading": [[1, "module-h3.dataloading"]], "h3.dataloading.hurricanedataset": [[1, "module-h3.dataloading.HurricaneDataset"]], "h3.dataloading.cmorph": [[1, "module-h3.dataloading.cmorph"]], "h3.dataloading.flood_risk": [[1, "module-h3.dataloading.flood_risk"]], "h3.dataloading.general_df_utils": [[1, "module-h3.dataloading.general_df_utils"]], "h3.dataloading.noaa_six_hourly_processing": [[1, "module-h3.dataloading.noaa_six_hourly_processing"]], "h3.dataloading.strom_surge": [[1, "module-h3.dataloading.strom_surge"]], "h3.dataloading.terrain_ef": [[1, "module-h3.dataloading.terrain_ef"]], "is_in_area() (in module h3.dataloading.strom_surge)": [[1, "h3.dataloading.strom_surge.is_in_area"]], "latlon2_storm_surge() (in module h3.dataloading.strom_surge)": [[1, "h3.dataloading.strom_surge.latlon2_storm_surge"]], "limit_df_spatial_range() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.limit_df_spatial_range"]], "load_cmorph() (in module h3.dataloading.cmorph)": [[1, "h3.dataloading.cmorph.load_cmorph"]], "lonlat2xy() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.lonlat2xy"]], "main() (in module h3.dataloading.cmorph)": [[1, "h3.dataloading.cmorph.main"]], "main() (in module h3.dataloading.flood_risk)": [[1, "h3.dataloading.flood_risk.main"]], "main() (in module h3.dataloading.strom_surge)": [[1, "h3.dataloading.strom_surge.main"]], "main() (in module h3.dataloading.terrain_ef)": [[1, "h3.dataloading.terrain_ef.main"]], "point_locations() (in module h3.dataloading.strom_surge)": [[1, "h3.dataloading.strom_surge.point_locations"]], "points_from_df_lat_lon_cols() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.points_from_df_lat_lon_cols"]], "preprocess_noaa_textfile() (in module h3.dataloading.noaa_six_hourly_processing)": [[1, "h3.dataloading.noaa_six_hourly_processing.preprocess_noaa_textfile"]], "reformat_noaa_df() (in module h3.dataloading.noaa_six_hourly_processing)": [[1, "h3.dataloading.noaa_six_hourly_processing.reformat_noaa_df"]], "return_most_recent_events_by_name() (in module h3.dataloading.noaa_six_hourly_processing)": [[1, "h3.dataloading.noaa_six_hourly_processing.return_most_recent_events_by_name"]], "standardise_df() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.standardise_df"]], "station_availability() (in module h3.dataloading.general_df_utils)": [[1, "h3.dataloading.general_df_utils.station_availability"]], "windspeed_to_strength_category() (in module h3.dataloading.noaa_six_hourly_processing)": [[1, "h3.dataloading.noaa_six_hourly_processing.windspeed_to_strength_category"]], "crop_images() (in module h3.dataprocessing.crop_images)": [[2, "h3.dataprocessing.crop_images.crop_images"]], "crop_images() (in module h3.dataprocessing.crop_images_img)": [[2, "h3.dataprocessing.crop_images_img.crop_images"]], "extract_coords() (in module h3.dataprocessing.crop_images)": [[2, "h3.dataprocessing.crop_images.extract_coords"]], "extract_coords() (in module h3.dataprocessing.crop_images_img)": [[2, "h3.dataprocessing.crop_images_img.extract_coords"]], "extract_damage_allfiles_ensemble() (in module h3.dataprocessing.extract_metadata)": [[2, "h3.dataprocessing.extract_metadata.extract_damage_allfiles_ensemble"]], "extract_damage_allfiles_separate() (in module h3.dataprocessing.extract_metadata)": [[2, "h3.dataprocessing.extract_metadata.extract_damage_allfiles_separate"]], "extract_metadata() (in module h3.dataprocessing.extract_metadata)": [[2, "h3.dataprocessing.extract_metadata.extract_metadata"]], "extract_point() (in module h3.dataprocessing.extract_metadata)": [[2, "h3.dataprocessing.extract_metadata.extract_point"]], "extract_polygon() (in module h3.dataprocessing.extract_metadata)": [[2, "h3.dataprocessing.extract_metadata.extract_polygon"]], "filter_files() (in module h3.dataprocessing.extract_metadata)": [[2, "h3.dataprocessing.extract_metadata.filter_files"]], "h3.dataprocessing": [[2, "module-h3.dataprocessing"]], "h3.dataprocessing.crop_images": [[2, "module-h3.dataprocessing.crop_images"]], "h3.dataprocessing.crop_images_img": [[2, "module-h3.dataprocessing.crop_images_img"]], "h3.dataprocessing.extract_metadata": [[2, "module-h3.dataprocessing.extract_metadata"]], "h3.dataprocessing.pre_processing": [[2, "module-h3.dataprocessing.pre_processing"]], "image_loading() (in module h3.dataprocessing.pre_processing)": [[2, "h3.dataprocessing.pre_processing.image_loading"]], "image_processing() (in module h3.dataprocessing.crop_images)": [[2, "h3.dataprocessing.crop_images.image_processing"]], "image_processing() (in module h3.dataprocessing.crop_images_img)": [[2, "h3.dataprocessing.crop_images_img.image_processing"]], "load_and_save_df() (in module h3.dataprocessing.extract_metadata)": [[2, "h3.dataprocessing.extract_metadata.load_and_save_df"]], "main() (in module h3.dataprocessing.crop_images)": [[2, "h3.dataprocessing.crop_images.main"]], "main() (in module h3.dataprocessing.crop_images_img)": [[2, "h3.dataprocessing.crop_images_img.main"]], "main() (in module h3.dataprocessing.extract_metadata)": [[2, "h3.dataprocessing.extract_metadata.main"]], "main() (in module h3.dataprocessing.pre_processing)": [[2, "h3.dataprocessing.pre_processing.main"]], "mask_to_bb() (in module h3.dataprocessing.crop_images)": [[2, "h3.dataprocessing.crop_images.mask_to_bb"]], "mask_to_bb() (in module h3.dataprocessing.crop_images_img)": [[2, "h3.dataprocessing.crop_images_img.mask_to_bb"]], "overlapping_polygons() (in module h3.dataprocessing.extract_metadata)": [[2, "h3.dataprocessing.extract_metadata.overlapping_polygons"]], "polygon_mask() (in module h3.dataprocessing.crop_images)": [[2, "h3.dataprocessing.crop_images.polygon_mask"]], "polygon_mask() (in module h3.dataprocessing.crop_images_img)": [[2, "h3.dataprocessing.crop_images_img.polygon_mask"]], "save_image() (in module h3.dataprocessing.crop_images_img)": [[2, "h3.dataprocessing.crop_images_img.save_image"]], "classificationlayer (class in h3.models.multimodal)": [[3, "h3.models.multimodal.ClassificationLayer"]], "genericencoder (class in h3.models.multimodal)": [[3, "h3.models.multimodal.GenericEncoder"]], "imageencoder (class in h3.models.multimodal)": [[3, "h3.models.multimodal.ImageEncoder"]], "overallmodel (class in h3.models.multimodal)": [[3, "h3.models.multimodal.OverallModel"]], "check_files_in_list_exist() (in module h3.models.balance_process)": [[3, "h3.models.balance_process.check_files_in_list_exist"]], "configure_optimizers() (h3.models.multimodal.overallmodel method)": [[3, "h3.models.multimodal.OverallModel.configure_optimizers"]], "data_loader() (in module h3.models.balance_process)": [[3, "h3.models.balance_process.data_loader"]], "drop_cols_containing_lists() (in module h3.models.balance_process)": [[3, "h3.models.balance_process.drop_cols_containing_lists"]], "forward() (h3.models.multimodal.classificationlayer method)": [[3, "h3.models.multimodal.ClassificationLayer.forward"]], "forward() (h3.models.multimodal.genericencoder method)": [[3, "h3.models.multimodal.GenericEncoder.forward"]], "forward() (h3.models.multimodal.imageencoder method)": [[3, "h3.models.multimodal.ImageEncoder.forward"]], "forward() (h3.models.multimodal.overallmodel method)": [[3, "h3.models.multimodal.OverallModel.forward"]], "get_model() (in module h3.models.vision_transformer)": [[3, "h3.models.vision_transformer.get_model"]], "get_preprocess() (in module h3.models.vision_transformer)": [[3, "h3.models.vision_transformer.get_preprocess"]], "h3.models": [[3, "module-h3.models"]], "h3.models.balance_process": [[3, "module-h3.models.balance_process"]], "h3.models.multimodal": [[3, "module-h3.models.multimodal"]], "h3.models.opti_utils": [[3, "module-h3.models.opti_utils"]], "h3.models.pre_train": [[3, "module-h3.models.pre_train"]], "h3.models.simple_models": [[3, "module-h3.models.simple_models"]], "h3.models.vision_transformer": [[3, "module-h3.models.vision_transformer"]], "load_full_ram() (in module h3.models.opti_utils)": [[3, "h3.models.opti_utils.load_full_ram"]], "load_image() (in module h3.models.pre_train)": [[3, "h3.models.pre_train.load_image"]], "load_model() (in module h3.models.pre_train)": [[3, "h3.models.pre_train.load_model"]], "logistic_reg() (in module h3.models.simple_models)": [[3, "h3.models.simple_models.logistic_reg"]], "main() (in module h3.models.balance_process)": [[3, "h3.models.balance_process.main"]], "main() (in module h3.models.opti_utils)": [[3, "h3.models.opti_utils.main"]], "main() (in module h3.models.pre_train)": [[3, "h3.models.pre_train.main"]], "main() (in module h3.models.simple_models)": [[3, "h3.models.simple_models.main"]], "open_img() (in module h3.models.opti_utils)": [[3, "h3.models.opti_utils.open_img"]], "read_and_merge_pkls() (in module h3.models.balance_process)": [[3, "h3.models.balance_process.read_and_merge_pkls"]], "rename_and_drop_duplicated_cols() (in module h3.models.balance_process)": [[3, "h3.models.balance_process.rename_and_drop_duplicated_cols"]], "train_dataloader() (h3.models.multimodal.overallmodel method)": [[3, "h3.models.multimodal.OverallModel.train_dataloader"]], "training_step() (h3.models.multimodal.overallmodel method)": [[3, "h3.models.multimodal.OverallModel.training_step"]], "val_dataloader() (h3.models.multimodal.overallmodel method)": [[3, "h3.models.multimodal.OverallModel.val_dataloader"]], "validation_step() (h3.models.multimodal.overallmodel method)": [[3, "h3.models.multimodal.OverallModel.validation_step"]], "building_plot() (in module h3.plotting.terrain_plots)": [[4, "h3.plotting.terrain_plots.building_plot"]], "h3.plotting": [[4, "module-h3.plotting"]], "h3.plotting.terrain_plots": [[4, "module-h3.plotting.terrain_plots"]], "main() (in module h3.plotting.terrain_plots)": [[4, "h3.plotting.terrain_plots.main"]], "plot_buildings_coast() (in module h3.plotting.terrain_plots)": [[4, "h3.plotting.terrain_plots.plot_buildings_coast"]], "plot_coastline() (in module h3.plotting.terrain_plots)": [[4, "h3.plotting.terrain_plots.plot_coastline"]], "plot_dem() (in module h3.plotting.terrain_plots)": [[4, "h3.plotting.terrain_plots.plot_dem"]], "plot_map_location() (in module h3.plotting.terrain_plots)": [[4, "h3.plotting.terrain_plots.plot_map_location"]], "check_all_downloads() (in module h3.utils.file_ops)": [[5, "h3.utils.file_ops.check_all_downloads"]], "downloader() (in module h3.utils.downloader)": [[5, "h3.utils.downloader.downloader"]], "get_checkpoint_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_checkpoint_dir"]], "get_cmorph_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_cmorph_dir"]], "get_coastline_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_coastline_dir"]], "get_data_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_data_dir"]], "get_dataloading_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_dataloading_dir"]], "get_datasets_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_datasets_dir"]], "get_dem_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_dem_dir"]], "get_download_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_download_dir"]], "get_ecmwf_data_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_ecmwf_data_dir"]], "get_flood_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_flood_dir"]], "get_h3_data_files_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_h3_data_files_dir"]], "get_isd_data_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_isd_data_dir"]], "get_metadata_pickle_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_metadata_pickle_dir"]], "get_noaa_data_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_noaa_data_dir"]], "get_pickle_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_pickle_dir"]], "get_processed_data_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_processed_data_dir"]], "get_sha1() (in module h3.utils.file_ops)": [[5, "h3.utils.file_ops.get_sha1"]], "get_storm_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_storm_dir"]], "get_terrain_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_terrain_dir"]], "get_weather_data_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_weather_data_dir"]], "get_xbd_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_xbd_dir"]], "get_xbd_disaster_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_xbd_disaster_dir"]], "get_xbd_hlabel_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_xbd_hlabel_dir"]], "get_xbd_hurricane_dir() (in module h3.utils.directories)": [[5, "h3.utils.directories.get_xbd_hurricane_dir"]], "guarantee_existence() (in module h3.utils.file_ops)": [[5, "h3.utils.file_ops.guarantee_existence"]], "h3.utils": [[5, "module-h3.utils"]], "h3.utils.directories": [[5, "module-h3.utils.directories"]], "h3.utils.downloader": [[5, "module-h3.utils.downloader"]], "h3.utils.file_ops": [[5, "module-h3.utils.file_ops"]], "main() (in module h3.utils.downloader)": [[5, "h3.utils.downloader.main"]], "main() (in module h3.utils.file_ops)": [[5, "h3.utils.file_ops.main"]], "unpack_file() (in module h3.utils.file_ops)": [[5, "h3.utils.file_ops.unpack_file"]], "url_download() (in module h3.utils.downloader)": [[5, "h3.utils.downloader.url_download"]]}})